{"ast":null,"code":"import _slicedToArray from\"/Users/oleg/Desktop/prakticum/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import PopupWithForm from\"./PopupWithForm\";import{CurrentUserContext}from\"../contexts/CurrentUserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditProfilePopup(props){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),description=_React$useState4[0],setDescription=_React$useState4[1];function handleChangeName(e){setName(e.target.value);}function handleChangeDescription(e){setDescription(e.target.value);}// Подписка на контекст\nvar currentUser=React.useContext(CurrentUserContext);// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){setName(currentUser.name);setDescription(currentUser.about);},[currentUser]);function handleSubmit(e){// Запрещаем браузеру переходить по адресу формы\ne.preventDefault();// Передаём значения управляемых компонентов во внешний обработчик\nprops.onUpdateUser({name:name,about:description});}return/*#__PURE__*/_jsxs(PopupWithForm,{name:\"user\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",isEditProfilePopupOpen:props.isOpen,closeAllPopups:props.onClose,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:\"user-input\",type:\"text\",name:\"name\",value:name,onChange:handleChangeName,className:\"popup__input popup__input-name\",placeholder:\"\\u0418\\u043C\\u044F\",required:true,minLength:\"2\",maxLength:\"40\"}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__input-error user-input-error\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{id:\"job-input\",type:\"text\",name:\"profession\",value:description,onChange:handleChangeDescription,className:\"popup__input popup__input-job\",placeholder:\"\\u041E \\u0441\\u0435\\u0431\\u0435\",required:true,minLength:\"2\",maxLength:\"200\"}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__input-error job-input-error\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"popup__button\",onClick:props.onClose,children:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"})]});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/oleg/Desktop/prakticum/react-mesto-auth/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","useState","name","setName","description","setDescription","handleChangeName","e","target","value","handleChangeDescription","currentUser","useContext","useEffect","about","handleSubmit","preventDefault","onUpdateUser","isOpen","onClose"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,kBAAR,KAAiC,gCAAjC,C,wFAEA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,qBAEPJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAFO,oDAExBC,IAFwB,qBAElBC,OAFkB,0CAGOP,KAAK,CAACK,QAAN,CAAe,EAAf,CAHP,qDAGxBG,WAHwB,qBAGXC,cAHW,qBAK/B,QAASC,CAAAA,gBAAT,CAA0BC,CAA1B,CAA6B,CAC3BJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CAED,QAASC,CAAAA,uBAAT,CAAiCH,CAAjC,CAAoC,CAClCF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CACD,CAEH;AACE,GAAME,CAAAA,WAAW,CAAGf,KAAK,CAACgB,UAAN,CAAiBd,kBAAjB,CAApB,CAEF;AACA;AACEF,KAAK,CAACiB,SAAN,CAAgB,UAAM,CACpBV,OAAO,CAACQ,WAAW,CAACT,IAAb,CAAP,CACAG,cAAc,CAACM,WAAW,CAACG,KAAb,CAAd,CACD,CAHD,CAGG,CAACH,WAAD,CAHH,EAKA,QAASI,CAAAA,YAAT,CAAsBR,CAAtB,CAAyB,CACvB;AACAA,CAAC,CAACS,cAAF,GAEA;AACAhB,KAAK,CAACiB,YAAN,CAAmB,CACjBf,IAAI,CAAEA,IADW,CAEjBY,KAAK,CAAEV,WAFU,CAAnB,EAID,CAED,mBACE,MAAC,aAAD,EAAe,IAAI,CAAC,MAApB,CAA2B,KAAK,CAAC,2HAAjC,CAAyD,sBAAsB,CAAEJ,KAAK,CAACkB,MAAvF,CACe,cAAc,CAAElB,KAAK,CAACmB,OADrC,CAC8C,QAAQ,CAAEJ,YADxD,wBAEE,sCACE,cAAO,EAAE,CAAC,YAAV,CAAuB,IAAI,CAAC,MAA5B,CAAmC,IAAI,CAAC,MAAxC,CAA+C,KAAK,CAAEb,IAAtD,CAA4D,QAAQ,CAAEI,gBAAtE,CACO,SAAS,CAAC,gCADjB,CAEO,WAAW,CAAC,oBAFnB,CAEyB,QAAQ,KAFjC,CAEkC,SAAS,CAAC,GAF5C,CAEgD,SAAS,CAAC,IAF1D,EADF,cAIE,aAAM,SAAS,CAAC,qCAAhB,EAJF,GAFF,cASE,sCACE,cAAO,EAAE,CAAC,WAAV,CAAsB,IAAI,CAAC,MAA3B,CAAkC,IAAI,CAAC,YAAvC,CAAoD,KAAK,CAAEF,WAA3D,CAAwE,QAAQ,CAAEM,uBAAlF,CACO,SAAS,CAAC,+BADjB,CAEO,WAAW,CAAC,iCAFnB,CAE4B,QAAQ,KAFpC,CAEqC,SAAS,CAAC,GAF/C,CAEmD,SAAS,CAAC,KAF7D,EADF,cAIE,aAAM,SAAS,CAAC,oCAAhB,EAJF,GATF,cAgBE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,eAAhC,CAAgD,OAAO,CAAEV,KAAK,CAACmB,OAA/D,oEAhBF,GADF,CAoBD,CAED,cAAepB,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n// Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"user\" title=\"Редактировать профиль\" isEditProfilePopupOpen={props.isOpen}\n                   closeAllPopups={props.onClose} onSubmit={handleSubmit}>\n      <label>\n        <input id=\"user-input\" type=\"text\" name=\"name\" value={name} onChange={handleChangeName}\n               className=\"popup__input popup__input-name\"\n               placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\"/>\n        <span className=\"popup__input-error user-input-error\">\n            </span>\n      </label>\n      <label>\n        <input id=\"job-input\" type=\"text\" name=\"profession\" value={description} onChange={handleChangeDescription}\n               className=\"popup__input popup__input-job\"\n               placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\"/>\n        <span className=\"popup__input-error job-input-error\">\n            </span>\n      </label>\n      <button type=\"submit\" className=\"popup__button\" onClick={props.onClose}>Сохранить</button>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup\n"]},"metadata":{},"sourceType":"module"}