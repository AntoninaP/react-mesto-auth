{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  } // запрос данных пользователя с сервера\n\n\n  getProfileInfo() {\n    return fetch(this.baseUrl + 'users/me', {\n      headers: this.headers\n    }).then(this._checkResponse);\n  } // редактирование данных пользователя\n\n\n  editProfileInfo(name, about) {\n    return fetch(this.baseUrl + 'users/me', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  } // загрузка массива карточек с сервера\n\n\n  getInitialCards() {\n    return fetch(this.baseUrl + 'cards', {\n      headers: this.headers\n    }).then(this._checkResponse);\n  } // добавление новой карточки\n\n\n  addNewCard(name, link) {\n    return fetch(this.baseUrl + 'cards', {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponse);\n  } // редактирование аватара\n\n\n  addNewAvatar(avatar) {\n    return fetch(this.baseUrl + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._checkResponse);\n  } // удаление карточки\n\n\n  deleteCard(cardId) {\n    return fetch(this.baseUrl + `cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._putLike(cardId);\n    } else {\n      return this._deleteLike(cardId);\n    }\n  } //поставить лайк\n\n\n  _putLike(cardId) {\n    return fetch(this.baseUrl + `cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(this._checkResponse);\n  } //удалить лайк\n\n\n  _deleteLike(cardId) {\n    return fetch(this.baseUrl + `cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst newApi = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20/',\n  headers: {\n    authorization: 'b9b88552-735f-4768-bf07-4ff3fcde19d4',\n    'Content-Type': 'application/json'\n  }\n});\nexport default newApi;","map":{"version":3,"sources":["/Users/oleg/Desktop/prakticum/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","baseUrl","headers","_checkResponse","res","ok","json","Promise","reject","status","getProfileInfo","fetch","then","editProfileInfo","name","about","method","body","JSON","stringify","getInitialCards","addNewCard","link","addNewAvatar","avatar","deleteCard","cardId","changeLikeCardStatus","isLiked","_putLike","_deleteLike","newApi","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,OAAL,GAAeD,OAAO,CAACC,OAAvB;AACA,SAAKC,OAAL,GAAeF,OAAO,CAACE,OAAvB;AACD;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACD,GAXO,CAaR;;;AACAC,EAAAA,cAAc,GAAG;AACf,WAAOC,KAAK,CAAC,KAAKV,OAAL,GAAe,UAAhB,EAA4B;AACtCC,MAAAA,OAAO,EAAE,KAAKA;AADwB,KAA5B,CAAL,CAGJU,IAHI,CAGC,KAAKT,cAHN,CAAP;AAID,GAnBO,CAqBR;;;AACAU,EAAAA,eAAe,CAACC,IAAD,EAAOC,KAAP,EAAc;AAC3B,WAAOJ,KAAK,CAAC,KAAKV,OAAL,GAAe,UAAhB,EAA4B;AACtCe,MAAAA,MAAM,EAAE,OAD8B;AAEtCd,MAAAA,OAAO,EAAE,KAAKA,OAFwB;AAGtCe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,QAAAA,IAAI,EAAEA,IADa;AAEnBC,QAAAA,KAAK,EAAEA;AAFY,OAAf;AAHgC,KAA5B,CAAL,CAQJH,IARI,CAQC,KAAKT,cARN,CAAP;AASD,GAhCO,CAkCR;;;AACAiB,EAAAA,eAAe,GAAG;AAChB,WAAOT,KAAK,CAAC,KAAKV,OAAL,GAAe,OAAhB,EAAyB;AACnCC,MAAAA,OAAO,EAAE,KAAKA;AADqB,KAAzB,CAAL,CAGJU,IAHI,CAGC,KAAKT,cAHN,CAAP;AAID,GAxCO,CA0CV;;;AACEkB,EAAAA,UAAU,CAACP,IAAD,EAAOQ,IAAP,EAAa;AACrB,WAAOX,KAAK,CAAC,KAAKV,OAAL,GAAe,OAAhB,EAAyB;AACnCe,MAAAA,MAAM,EAAE,MAD2B;AAEnCd,MAAAA,OAAO,EAAE,KAAKA,OAFqB;AAGnCe,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBL,QAAAA,IAAI,EAAEA,IADa;AAEnBQ,QAAAA,IAAI,EAAEA;AAFa,OAAf;AAH6B,KAAzB,CAAL,CAQJV,IARI,CAQC,KAAKT,cARN,CAAP;AASD,GArDO,CAuDV;;;AACEoB,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,WAAOb,KAAK,CAAC,KAAKV,OAAL,GAAe,iBAAhB,EAAmC;AAC7Ce,MAAAA,MAAM,EAAE,OADqC;AAE7Cd,MAAAA,OAAO,EAAE,KAAKA,OAF+B;AAG7Ce,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBK,QAAAA,MAAM,EAAEA;AADW,OAAf;AAHuC,KAAnC,CAAL,CAOJZ,IAPI,CAOC,KAAKT,cAPN,CAAP;AAQD,GAjEO,CAmER;;;AACAsB,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,WAAOf,KAAK,CAAC,KAAKV,OAAL,GAAgB,SAAQyB,MAAO,EAAhC,EAAmC;AAC7CV,MAAAA,MAAM,EAAE,QADqC;AAE7Cd,MAAAA,OAAO,EAAE,KAAKA;AAF+B,KAAnC,CAAL,CAIJU,IAJI,CAIC,KAAKT,cAJN,CAAP;AAKD;;AAEDwB,EAAAA,oBAAoB,CAACD,MAAD,EAASE,OAAT,EAAkB;AACpC,QAAIA,OAAJ,EAAa;AACX,aAAO,KAAKC,QAAL,CAAcH,MAAd,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKI,WAAL,CAAiBJ,MAAjB,CAAP;AACD;AACF,GAlFO,CAoFR;;;AACAG,EAAAA,QAAQ,CAACH,MAAD,EAAS;AACf,WAAOf,KAAK,CAAC,KAAKV,OAAL,GAAgB,eAAcyB,MAAO,EAAtC,EAAyC;AACnDV,MAAAA,MAAM,EAAE,KAD2C;AAEnDd,MAAAA,OAAO,EAAE,KAAKA;AAFqC,KAAzC,CAAL,CAIJU,IAJI,CAIC,KAAKT,cAJN,CAAP;AAKD,GA3FO,CA6FR;;;AACA2B,EAAAA,WAAW,CAACJ,MAAD,EAAS;AAClB,WAAOf,KAAK,CAAC,KAAKV,OAAL,GAAgB,eAAcyB,MAAO,EAAtC,EAAyC;AACnDV,MAAAA,MAAM,EAAE,QAD2C;AAEnDd,MAAAA,OAAO,EAAE,KAAKA;AAFqC,KAAzC,CAAL,CAIJU,IAJI,CAIC,KAAKT,cAJN,CAAP;AAKD;;AApGO;;AAwGV,MAAM4B,MAAM,GAAG,IAAIjC,GAAJ,CAAQ;AACrBG,EAAAA,OAAO,EAAE,8CADY;AAErBC,EAAAA,OAAO,EAAE;AACP8B,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFY,CAAR,CAAf;AAQA,eAAeD,MAAf","sourcesContent":["class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  // запрос данных пользователя с сервера\n  getProfileInfo() {\n    return fetch(this.baseUrl + 'users/me', {\n      headers: this.headers\n    })\n      .then(this._checkResponse)\n  }\n\n  // редактирование данных пользователя\n  editProfileInfo(name, about) {\n    return fetch(this.baseUrl + 'users/me', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  // загрузка массива карточек с сервера\n  getInitialCards() {\n    return fetch(this.baseUrl + 'cards', {\n      headers: this.headers\n    })\n      .then(this._checkResponse)\n  }\n\n// добавление новой карточки\n  addNewCard(name, link) {\n    return fetch(this.baseUrl + 'cards', {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n// редактирование аватара\n  addNewAvatar(avatar) {\n    return fetch(this.baseUrl + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar,\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  // удаление карточки\n  deleteCard(cardId) {\n    return fetch(this.baseUrl + `cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._putLike(cardId)\n    } else {\n      return this._deleteLike(cardId)\n    }\n  }\n\n  //поставить лайк\n  _putLike(cardId) {\n    return fetch(this.baseUrl + `cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this.headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  //удалить лайк\n  _deleteLike(cardId) {\n    return fetch(this.baseUrl + `cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(this._checkResponse)\n  }\n}\n\n\nconst newApi = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20/',\n  headers: {\n    authorization: 'b9b88552-735f-4768-bf07-4ff3fcde19d4',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default newApi\n"]},"metadata":{},"sourceType":"module"}