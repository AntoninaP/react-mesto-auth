{"ast":null,"code":"var _jsxFileName = \"/Users/oleg/Desktop/prakticum/mesto-react/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  function handleClick() {\n    props.handleCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleCardDelete() {\n    props.onCardDelete(props.card);\n  }\n\n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = props.card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `elements__button-delite ${isOwn ? 'elements__button-delite' : 'elements__button-delite_hidden'}`; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `elements__button-like ${isLiked ? 'elements__button-like_black' : 'elements__button-like'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elements__item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.card.link,\n      className: \"elements__image\",\n      alt: \"\\u043C\\u0435\\u0441\\u0442\\u043E \\u0432 \\u0420\\u043E\\u0441\\u0441\\u0438\\u0438\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: cardDeleteButtonClassName,\n      onClick: handleCardDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"elements__name\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"elements__title\",\n        children: props.card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"elements__group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: cardLikeButtonClassName,\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"elements__counter\",\n          children: props.card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/oleg/Desktop/prakticum/mesto-react/src/components/Card.js"],"names":["React","CurrentUserContext","Card","props","handleClick","handleCardClick","card","handleLikeClick","onCardLike","handleCardDelete","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEnB,WAASC,WAAT,GAAuB;AACrBD,IAAAA,KAAK,CAACE,eAAN,CAAsBF,KAAK,CAACG,IAA5B;AACD;;AAED,WAASC,eAAT,GAA2B;AACzBJ,IAAAA,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACG,IAAvB;AACD;;AAED,WAASG,gBAAT,GAA4B;AAC1BN,IAAAA,KAAK,CAACO,YAAN,CAAmBP,KAAK,CAACG,IAAzB;AACD;;AAED,QAAMK,WAAW,GAAGX,KAAK,CAACY,UAAN,CAAiBX,kBAAjB,CAApB,CAdmB,CAenB;;AACA,QAAMY,KAAK,GAAGV,KAAK,CAACG,IAAN,CAAWQ,KAAX,CAAiBC,GAAjB,KAAyBJ,WAAW,CAACI,GAAnD,CAhBmB,CAkBrB;;AACE,QAAMC,yBAAyB,GAC5B,2BAA0BH,KAAK,GAAG,yBAAH,GAA+B,gCAAiC,EADlG,CAnBmB,CAuBnB;;AACA,QAAMI,OAAO,GAAGd,KAAK,CAACG,IAAN,CAAWY,KAAX,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAUJ,WAAW,CAACI,GAAjD,CAAhB,CAxBmB,CA0BrB;;AACE,QAAMM,uBAAuB,GAC1B,yBAAwBJ,OAAO,GAAG,6BAAH,GAAmC,uBAAwB,EAD7F;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEd,KAAK,CAACG,IAAN,CAAWgB,IAArB;AAA2B,MAAA,SAAS,EAAC,iBAArC;AAAuD,MAAA,GAAG,EAAC,4EAA3D;AAA4E,MAAA,OAAO,EAAElB;AAArF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEY,yBAAjC;AAA4D,MAAA,OAAO,EAAEP;AAArE;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCN,KAAK,CAACG,IAAN,CAAWiB;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEF,uBAAjC;AAA0D,UAAA,OAAO,EAAEd;AAAnE;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,oBAAkCJ,KAAK,CAACG,IAAN,CAAWY,KAAX,CAAiBM;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBD;;GAhDQtB,I;;KAAAA,I;AAkDT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card(props) {\n\n  function handleClick() {\n    props.handleCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleCardDelete() {\n    props.onCardDelete(props.card);\n  }\n\n  const currentUser = React.useContext(CurrentUserContext);\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `elements__button-delite ${isOwn ? 'elements__button-delite' : 'elements__button-delite_hidden'}`\n  );\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (\n    `elements__button-like ${isLiked ? 'elements__button-like_black' : 'elements__button-like'}`\n  );\n\n  return (\n    (\n      <div className=\"elements__item\">\n        <img src={props.card.link} className=\"elements__image\" alt=\"место в России\" onClick={handleClick}/>\n        <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleCardDelete}>\n        </button>\n        <div className=\"elements__name\">\n          <h2 className=\"elements__title\">{props.card.name}</h2>\n          <div className=\"elements__group\">\n            <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}>\n            </button>\n            <p className=\"elements__counter\">{props.card.likes.length}</p>\n          </div>\n        </div>\n      </div>\n    )\n  )\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}