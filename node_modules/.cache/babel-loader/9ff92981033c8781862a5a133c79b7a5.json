{"ast":null,"code":"import _classCallCheck from\"/Users/oleg/Desktop/prakticum/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/oleg/Desktop/prakticum/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this.baseUrl=options.baseUrl;this.headers=options.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}// запрос данных пользователя с сервера\n},{key:\"getProfileInfo\",value:function getProfileInfo(){return fetch(this.baseUrl+'users/me',{headers:this.headers}).then(this._checkResponse);}// редактирование данных пользователя\n},{key:\"editProfileInfo\",value:function editProfileInfo(name,about){return fetch(this.baseUrl+'users/me',{method:'PATCH',headers:this.headers,body:JSON.stringify({name:name,about:about})}).then(this._checkResponse);}// загрузка массива карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(this.baseUrl+'cards',{headers:this.headers}).then(this._checkResponse);}// добавление новой карточки\n},{key:\"addNewCard\",value:function addNewCard(name,link){return fetch(this.baseUrl+'cards',{method:'POST',headers:this.headers,body:JSON.stringify({name:name,link:link})}).then(this._checkResponse);}// редактирование аватара\n},{key:\"addNewAvatar\",value:function addNewAvatar(avatar){return fetch(this.baseUrl+'users/me/avatar',{method:'PATCH',headers:this.headers,body:JSON.stringify({avatar:avatar})}).then(this._checkResponse);}// удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(this.baseUrl+\"cards/\".concat(cardId),{method:'DELETE',headers:this.headers}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return this._putLike(cardId);}else{return this._deleteLike(cardId);}}//поставить лайк\n},{key:\"_putLike\",value:function _putLike(cardId){return fetch(this.baseUrl+\"cards/likes/\".concat(cardId),{method:'PUT',headers:this.headers}).then(this._checkResponse);}//удалить лайк\n},{key:\"_deleteLike\",value:function _deleteLike(cardId){return fetch(this.baseUrl+\"cards/likes/\".concat(cardId),{method:'DELETE',headers:this.headers}).then(this._checkResponse);}}]);return Api;}();var newApi=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-20/',headers:{authorization:'b9b88552-735f-4768-bf07-4ff3fcde19d4','Content-Type':'application/json'}});export default newApi;","map":{"version":3,"sources":["/Users/oleg/Desktop/prakticum/react-mesto-auth/src/utils/api.js"],"names":["Api","options","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","name","about","method","body","JSON","stringify","link","avatar","cardId","isLiked","_putLike","_deleteLike","newApi","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  // запрос данных пользователя с сервера\n  getProfileInfo() {\n    return fetch(this.baseUrl + 'users/me', {\n      headers: this.headers\n    })\n      .then(this._checkResponse)\n  }\n\n  // редактирование данных пользователя\n  editProfileInfo(name, about) {\n    return fetch(this.baseUrl + 'users/me', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  // загрузка массива карточек с сервера\n  getInitialCards() {\n    return fetch(this.baseUrl + 'cards', {\n      headers: this.headers\n    })\n      .then(this._checkResponse)\n  }\n\n// добавление новой карточки\n  addNewCard(name, link) {\n    return fetch(this.baseUrl + 'cards', {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n// редактирование аватара\n  addNewAvatar(avatar) {\n    return fetch(this.baseUrl + 'users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar,\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  // удаление карточки\n  deleteCard(cardId) {\n    return fetch(this.baseUrl + `cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._putLike(cardId)\n    } else {\n      return this._deleteLike(cardId)\n    }\n  }\n\n  //поставить лайк\n  _putLike(cardId) {\n    return fetch(this.baseUrl + `cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this.headers,\n    })\n      .then(this._checkResponse)\n  }\n\n  //удалить лайк\n  _deleteLike(cardId) {\n    return fetch(this.baseUrl + `cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(this._checkResponse)\n  }\n}\n\n\nconst newApi = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20/',\n  headers: {\n    authorization: 'b9b88552-735f-4768-bf07-4ff3fcde19d4',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default newApi\n"]},"metadata":{},"sourceType":"module"}