{"ast":null,"code":"var _jsxFileName = \"/Users/oleg/Desktop/prakticum/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const [named, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(e) {\n    console.log(e.target);\n    setName(e.target.name);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.description);\n  } // function handleClear() {\n  //   setName('');\n  //   setDescription('');\n  // }\n  // Подписка на контекст\n\n\n  const currentUser = React.useContext(CurrentUserContext); // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    console.log(named, description); // Запрещаем браузеру переходить по адресу формы\n\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name: named,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"user\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isEditProfilePopupOpen: props.isOpen,\n    closeAllPopups: props.onClose,\n    handleUpdateUser: props.onUpdateUser,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-input\",\n        type: \"text\",\n        name: \"name\",\n        value: named,\n        onChange: handleChangeName,\n        className: \"popup__input popup__input-name\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error user-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"job-input\",\n        type: \"text\",\n        name: \"profession\",\n        value: description,\n        onChange: handleChangeDescription,\n        className: \"popup__input popup__input-job\",\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__input-error job-input-error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"popup__button\",\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"N6WGjiOEtKw6M9P+rA/JDewFLUU=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/oleg/Desktop/prakticum/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","named","setName","useState","description","setDescription","handleChangeName","e","console","log","target","name","handleChangeDescription","currentUser","useContext","useEffect","about","handleSubmit","preventDefault","onUpdateUser","isOpen","onClose"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n\n  const [named, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(e) {\n    console.log(e.target)\n    setName(e.target.name);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.description);\n  }\n\n  // function handleClear() {\n  //   setName('');\n  //   setDescription('');\n  // }\n\n// Подписка на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    console.log(named, description)\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: named,\n      about: description,\n    });\n  }\n\n\n  return (\n    <PopupWithForm name=\"user\" title=\"Редактировать профиль\" isEditProfilePopupOpen={props.isOpen}\n                   closeAllPopups={props.onClose} handleUpdateUser={props.onUpdateUser} onSubmit={handleSubmit}>\n      <label>\n        <input id=\"user-input\" type=\"text\" name=\"name\" value={named} onChange={handleChangeName}\n               className=\"popup__input popup__input-name\"\n               placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\"/>\n        <span className=\"popup__input-error user-input-error\">\n            </span>\n      </label>\n      <label>\n        <input id=\"job-input\" type=\"text\" name=\"profession\" value={description} onChange={handleChangeDescription}\n               className=\"popup__input popup__input-job\"\n               placeholder=\"О себе\" required minLength=\"2\" maxLength=\"200\"/>\n        <span className=\"popup__input-error job-input-error\">\n            </span>\n      </label>\n      <button type=\"submit\" className=\"popup__button\">Сохранить</button>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup\n"]},"metadata":{},"sourceType":"module"}